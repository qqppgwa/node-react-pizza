{"version":3,"sources":["page/Menu/calcuBox.module.css","page/Menu/Menu.module.css","page/Order/Order.module.css","page/Menu/MenuCell.module.css","page/Menu/OrderingList.module.css","page/Menu/MenuCell.jsx","page/Menu/OrderingList.jsx","assets/api.js","page/Menu/CalcuBox.jsx","page/Menu/Menu.jsx","page/Order/Order.jsx","page/EditMenu/EditMenu.jsx","store/index.js","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","MenuCell","props","data","className","style","cell","onClick","console","log","addItem","index","id","flavour","connect","ordering","isInit","pizza","dispatch","orderIng","item","type","payload","list","total","i","length","key","size","crust","topping","push","axios","method","url","saveOrder","then","res","CalcuBox","checkHandle","el","window","document","getElementById","v","JSON","parse","value","a","state","toppingValue","checked","setTimeout","priceCal","filter","setState","sizeValue","crustValue","toppingPrice","price","basicPrice","priceRatio","addOrder","topStr","close","this","crustOpt","sizeOpt","toppingRadio","opt","stringify","opt2","opt3","onChange","cover","e","box","stopPropagation","htmlFor","defaultValue","sizeChange","bind","crustChange","add","React","Component","Menu","Item","join","arr","showPop","content","pop","orderList","l","menuCon","board","Order","listCon","extraTop","EditMenu","init","menuInit","async","store","createStore","compose","applyMiddleware","thunkMiddleware","__REDUX_DEVTOOLS_EXTENSION__","App","prpos","exact","to","path","component","menu","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42fd63c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"calcuBox_cover__2Kre5\",\"box\":\"calcuBox_box__2dkHr\",\"add\":\"calcuBox_add__30O7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Menu_board__19mwG\",\"menuCon\":\"Menu_menuCon__3z9k-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderList\":\"Order_orderList__1NIpv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"MenuCell_cell__2m1-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"OrderingList_list__3be96\"};","import React from 'react'\r\nimport style from './MenuCell.module.css'\r\n// import { getMenu } from '../../assets/api'\r\nconst MenuCell = props => {\r\n  // console.log(props.data)\r\n  const data = props.data\r\n  const addItem = () => {\r\n    console.log(props)\r\n    props.addItem(props.index)\r\n  }\r\n  return (\r\n    <div className={style.cell} onClick={addItem}>\r\n      <p>{data.id}</p>\r\n      <p>{data.flavour}</p>\r\n    </div>\r\n  )\r\n}\r\nexport default MenuCell\r\n","import React, { useState, useEffect } from 'react'\r\nimport style from './OrderingList.module.css'\r\nimport { saveOrder} from '../../assets/api'\r\nimport { connect } from 'react-redux'\r\n\r\nconst OrderingList = props => {\r\n  // const [newOrder, setNewOrder] = useState(props.ordering)\r\n  // useEffect(() => {\r\n  //   // if (componentDidUpdate & (x or y changed))\r\n  //   setNewOrder(props.ordering)\r\n  // }, newOrder)\r\n  console.log(props)\r\n  let list = []\r\n  let total = 0\r\n  for (let i = 0; i < props.ordering.length; i++) {\r\n    let data = props.ordering[i]\r\n    console.log(data)\r\n    let item = (\r\n      <ul key={i}>\r\n        <li>flavour : {data.pizza}</li>\r\n        <li>size : {data.size}\"</li>\r\n        <li>cust : {data.crust}</li>\r\n        <li>\r\n          additional Topping :\r\n          <br />\r\n          {data.topping}\r\n        </li>\r\n        <li>Subtotal : {data.total}</li>\r\n      </ul>\r\n    )\r\n\r\n    list.push(item)\r\n    total += data.total\r\n  }\r\n  const confirmOrder = () => {\r\n    saveOrder(props.ordering).then(res=>{\r\n      props.orderIng([])\r\n})\r\n    console.log(props.ordering)\r\n    // console.log('jjj')\r\n  }\r\n  return (\r\n    <aside className={style.list}>\r\n      {list}\r\n      <p>Total : {total}</p>\r\n      <button onClick={confirmOrder}>Confirm</button>\r\n    </aside>\r\n  )\r\n}\r\nconst mapStateToProps = ({ ordering, isInit, pizza }) => {\r\n  // console.log(a)\r\n  return {\r\n    ordering: ordering,\r\n    isInit: isInit,\r\n    pizza: pizza\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  //update\r\n  return {\r\n    orderIng: item => {\r\n      // console.log(item)\r\n      dispatch({\r\n        type: 'Ordering',\r\n        payload: {\r\n          list: item\r\n        }\r\n      }) //store.js裡的action\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(OrderingList)\r\n","import axios from 'axios';\r\n// const apiKey = 'IGLOYrMAV8KRjzGzj6vvF3dGx2WlASHZ'\r\n// const getImg = axios.create({\r\n//     baseURL: 'https://api.giphy.com/v1'\r\n// });\r\n// const searchPrefix='https://api.giphy.com/v1/gifs/search?api_key=IGLOYrMAV8KRjzGzj6vvF3dGx2WlASHZ&';\r\nexport const getMenu = data => axios({\r\n    method: 'get',\r\n    url: '/getMenu',\r\n    'Content-Type': 'application/json',\r\n});\r\nexport const getCrust = data => axios({\r\n    method: 'get',\r\n    url: '/getCrust',\r\n    'Content-Type': 'application/json',\r\n});\r\nexport const getSize = data => axios({\r\n    method: 'get',\r\n    url: '/getSize',\r\n    'Content-Type': 'application/json',\r\n});\r\nexport const getTopping = data => axios({\r\n    method: 'get',\r\n    url: '/getTopping',\r\n    'Content-Type': 'application/json',\r\n});\r\nexport const saveOrder = data => axios({\r\n    method: 'post',\r\n    url: '/saveOrder',\r\n    data: data,\r\n    'Content-Type': 'application/json',\r\n});\r\nexport const getOrderList = data => axios({\r\n    method: 'get',\r\n    url: '/order/getOrderList',\r\n    data: data,\r\n    'Content-Type': 'application/json',\r\n});\r\n// export const apiImgId = data => getImg.get(`/gifs?api_key=${apiKey}&ids=${data.ids}`);","import React from 'react'\r\nimport style from './calcuBox.module.css'\r\nimport { connect } from 'react-redux'\r\nclass CalcuBox extends React.Component {\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      pizza: props.data,\r\n      crustValue: props.crust[0],\r\n      sizeValue: props.size[0],\r\n      toppingValue: [],\r\n      total: props.data.basicPrice\r\n    }\r\n  }\r\n  render() {\r\n    console.log(this.state)\r\n    let crustOpt = []\r\n    let sizeOpt = []\r\n    let toppingRadio = []\r\n    const pizza = this.props.data\r\n    for (let i = 0; i < this.props.crust.length; i++) {\r\n      let opt = (\r\n        <option value={JSON.stringify(this.props.crust[i])} key={i}>\r\n          {this.props.crust[i].type + ` +$${this.props.crust[i].price}`}\r\n        </option>\r\n      )\r\n      crustOpt.push(opt)\r\n    }\r\n    for (let i = 0; i < this.props.size.length; i++) {\r\n      let opt2 = (\r\n        <option value={JSON.stringify(this.props.size[i])} key={i}>\r\n          {this.props.size[i].size}\r\n        </option>\r\n      )\r\n      sizeOpt.push(opt2)\r\n    }\r\n    for (let i = 0; i < this.props.topping.length; i++) {\r\n      let opt3 = (\r\n        <p key={i}>\r\n          <input\r\n            type=\"checkbox\"\r\n            id={'check' + i}\r\n            onChange={() => {\r\n              this.checkHandle(i)\r\n            }}\r\n            value={JSON.stringify(this.props.topping[i])}\r\n          />\r\n          {`${this.props.topping[i].topping} +$${this.props.topping[i].price}`}\r\n        </p>\r\n      )\r\n      toppingRadio.push(opt3)\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className={style.cover}\r\n        onClick={e => {\r\n          this.close(e)\r\n        }}\r\n      >\r\n        <div\r\n          className={style.box}\r\n          onClick={e => {\r\n            e.stopPropagation()\r\n          }}\r\n        >\r\n          <h3>\r\n            <p>{pizza.id}</p>\r\n            {pizza.flavour}\r\n          </h3>\r\n          <p>\r\n            <label htmlFor=\"seleSize\">Size</label>\r\n            <select id=\"seleSize\" defaultValue={this.state.sizeValue} onChange={this.sizeChange.bind(this)}>\r\n              {sizeOpt}\r\n            </select>\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"seleCrust\">Crust</label>\r\n            <select id=\"seleCrust\" defaultValue={this.state.crustValue} onChange={this.crustChange.bind(this)}>\r\n              {crustOpt}\r\n            </select>\r\n          </p>\r\n\r\n          <div className={style.add}>{toppingRadio}</div>\r\n          <p>total:{this.state.total}</p>\r\n          <button onClick={this.addOrder}>Add to Order</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  crustChange() {\r\n    // console.log(window.document.getElementById('seleCrust').value)\r\n\r\n    this.setState(\r\n      {\r\n        crustValue: JSON.parse(window.document.getElementById('seleCrust').value)\r\n      },\r\n      () => {\r\n        this.priceCal()\r\n      }\r\n    )\r\n    // console.log(this.state)\r\n  }\r\n  sizeChange() {\r\n    // let sizeValue = JSON.parse(window.document.getElementById('seleSize').value)\r\n    // let pizza = this.props.data\r\n    // // let size = this.state.sizeValue\r\n    // let crust = this.state.crustValue\r\n    // let toppingPrice = 0\r\n    // console.log(this.state.toppingValue.length)\r\n    // for (let i = 0; i < this.state.toppingValue.length; i++) {\r\n    //   toppingPrice += this.state.toppingValue[i].price\r\n    // }\r\n    // console.log(toppingPrice)\r\n    this.setState(\r\n      {\r\n        sizeValue: JSON.parse(window.document.getElementById('seleSize').value)\r\n        // total: pizza.basicPrice * sizeValue.priceRatio + crust.price + toppingPrice\r\n      },\r\n      () => {\r\n        this.priceCal()\r\n      }\r\n    )\r\n\r\n    // console.log(this.state)\r\n  }\r\n\r\n  close(e) {\r\n    // console.log(e)\r\n    e.stopPropagation()\r\n    this.props.close()\r\n  }\r\n  checkHandle = i => {\r\n    let el = window.document.getElementById('check' + i)\r\n    let v = JSON.parse(el.value)\r\n    // let str\r\n    let a = this.state.toppingValue\r\n    // console.log(v)\r\n\r\n    // console.log(a)\r\n    // console.log(window.document.getElementById('check' + i).checked)\r\n    if (el.checked) {\r\n      // str = this.state.toppingValue + v.topping + ','\r\n      a.push(v)\r\n      // this.setState({ toppingValue: a })\r\n      // console.log(a)\r\n      setTimeout(this.priceCal(), 500)\r\n    } else {\r\n      a = a.filter(item => {\r\n        // console.log(item)\r\n        // console.log(v)\r\n        return item.topping !== v.topping\r\n      })\r\n\r\n      // console.log(b)\r\n      // str = this.state.toppingValue.replace(v.topping + ',', '')\r\n    }\r\n\r\n    this.setState({ toppingValue: a }, () => {\r\n      this.priceCal()\r\n    })\r\n  }\r\n\r\n  priceCal = () => {\r\n    // console.log(this.state)\r\n    let sizeValue = this.state.sizeValue\r\n    let pizza = this.props.data\r\n    // let size = this.state.sizeValue\r\n    let crust = this.state.crustValue\r\n    let toppingPrice = 0\r\n    // console.log(this.state.toppingValue.length)\r\n    for (let i = 0; i < this.state.toppingValue.length; i++) {\r\n      toppingPrice += this.state.toppingValue[i].price\r\n    }\r\n    // console.log(toppingPrice)\r\n    // console.log(pizza.basicPrice)\r\n    // console.log(sizeValue.priceRatio)\r\n    // console.log(crust.price)\r\n    // console.log(toppingPrice)\r\n    this.setState({ total: pizza.basicPrice * sizeValue.priceRatio + crust.price + toppingPrice })\r\n    // console.log(this.state.total)\r\n  }\r\n  addOrder = () => {\r\n    let topStr = []\r\n    for (let i = 0; i < this.state.toppingValue.length; i++) {\r\n      topStr.push(this.state.toppingValue[i].topping)\r\n    }\r\n    let item = {\r\n      pizza: this.state.pizza,\r\n      crust: this.state.crustValue.type,\r\n      size: this.state.sizeValue.size,\r\n      topping: topStr,\r\n      total: this.state.total\r\n    }\r\n    this.props.addOrder(item)\r\n    this.props.close()\r\n\r\n    // console.log(this.state)\r\n  }\r\n}\r\nconst mapStateToProps = ({ ordering, size, pizza, crust, topping }) => {\r\n  return {\r\n    ordering: ordering,\r\n    crust: crust,\r\n    size: size,\r\n    topping: topping\r\n    // pizza: pizza\r\n  }\r\n}\r\n//\r\nexport default connect(mapStateToProps, null)(CalcuBox)\r\n","import React from 'react'\r\nimport MenuCell from './MenuCell.jsx'\r\nimport OrderingList from './OrderingList.jsx'\r\nimport style from './Menu.module.css'\r\nimport { getMenu } from '../../assets/api'\r\nimport Calcubox from './CalcuBox.jsx'\r\nimport { connect } from 'react-redux'\r\nclass Menu extends React.Component {\r\n  constructor(props) {\r\n    super()\r\n    this.state = {\r\n      // content: [],\r\n      // menuData: [],\r\n      showPop: null\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props)\r\n    let content = []\r\n    let showPop = this.state.showPop\r\n    let pop = showPop !== null ? <Calcubox data={this.props.pizza[showPop]} close={this.close.bind(this)} addOrder={this.addOrder} /> : null\r\n    console.log(this.props.ordering.length)\r\n    let orderList = this.props.ordering.length > 0 ? <OrderingList l={this.props.ordering.length} /> : null\r\n    if (this.props.isInit) {\r\n      for (let i = 0; i < this.props.pizza.length; i++) {\r\n        // console.log(data.length)\r\n        let cell = <MenuCell addItem={this.addItem.bind(this)} data={this.props.pizza[i]} key={i} index={i} />\r\n        content.push(cell)\r\n        // console.log(content)\r\n      }\r\n      // this.setState({ content: content })\r\n    } else {\r\n      content = <p>loading</p>\r\n    }\r\n\r\n    return (\r\n      <div className={style.menuCon}>\r\n        <div className={style.board}>{content}</div>\r\n        {pop}\r\n        {orderList}\r\n      </div>\r\n    )\r\n\r\n    // getMenu().then(res => {\r\n    //   // console.log(res.data.data)\r\n    //   let data = [{ id: 1, flavour: 'meat love', price: '10.9' }]\r\n    //   for (let i = 0; i < data.length; i++) {\r\n    //     console.log(data.length)\r\n    //     let cell = <MenuCell data={data[i]} index={i} />\r\n    //     content.push(cell)\r\n    //     console.log(content)\r\n    //   }\r\n    // })\r\n  }\r\n  addItem(a) {\r\n    // console.log(a)\r\n    this.setState({ showPop: a })\r\n  }\r\n  close() {\r\n    this.setState({ showPop: null })\r\n  }\r\n  addOrder = item => {\r\n    console.log(item)\r\n    let Item=item\r\n    Item.pizza=item.pizza.flavour\r\n\r\n    Item.topping=item.topping.length>0?item.topping.join(','):'none'\r\n    // console.log(i)\r\n    let arr = this.props.ordering\r\n    arr.push(Item)\r\n    // console.log(this.props.ordering)\r\n    this.props.orderIng(arr)\r\n  }\r\n}\r\n// const Menu = props => {\r\n//   let content = []\r\n// getMenu().then(res => {\r\n//   // console.log(res.data.data)\r\n//   let data = [{ id: 1, flavour: 'meat love', price: '10.9' }]\r\n//   for (let i = 0; i < data.length; i++) {\r\n//     console.log(data.length)\r\n//     let cell = <MenuCell data={data[i]} index={i} />\r\n//     content.push(cell)\r\n//     console.log(content)\r\n//   }\r\n// })\r\n\r\n// return <div>{content}</div>\r\n// }\r\nconst mapStateToProps = ({ ordering, isInit, pizza }) => {\r\n  // console.log(a)\r\n  return {\r\n    ordering: ordering,\r\n    isInit: isInit,\r\n    pizza: pizza\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  //update\r\n  return {\r\n    orderIng: item => {\r\n      // console.log(item)\r\n      dispatch({\r\n        type: 'Ordering',\r\n        payload: {\r\n          list: item\r\n        }\r\n      }) //store.js裡的action\r\n    }\r\n  }\r\n}\r\n//\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu)\r\n// export default Menu\r\n","import React from 'react'\r\nimport style from './Order.module.css'\r\nimport { getOrderList} from '../../assets/api'\r\nclass Order extends React.Component{\r\n  constructor(){\r\n    super()\r\n    this.state={\r\n      list:[],\r\n      item:''\r\n    }\r\n  }\r\n  render(){\r\nlet list=this.state.list\r\nconsole.log(list)\r\n// if(this.state.list.length>0){\r\n  let listCon=[]\r\n  for(let i=0;i<list.length;i++){\r\n    let item=(\r\n      <li className={style.item} key={i}>\r\n        <div>{list[i].flavour}</div>\r\n        <div>{list[i].size+'\"'}</div>\r\n        <div>{list[i].crust}</div>\r\n        <div>{list[i].total}</div>\r\n        <div>{list[i].extraTop}</div>\r\n        \r\n      </li>\r\n    )\r\n    listCon.push(item)\r\n  }\r\n// }\r\n\r\n\r\n    return (\r\n    <div>\r\n      <h1>Order List</h1>\r\n      <ul className={style.orderList}>\r\n        <li>\r\n        <div>flavour</div>\r\n        <div>size</div>\r\n        <div>crust</div>\r\n        <div>total</div>\r\n        <div>{'Additional Topping'}</div>\r\n        </li>\r\n        {listCon}\r\n      </ul>\r\n\r\n  </div>\r\n  )\r\n  }\r\n  componentDidMount(){\r\n      getOrderList().then(res=>{\r\n        console.log(res.data.data)\r\n        this.setState({list:res.data.data})\r\n   \r\n})\r\n  }\r\n}\r\n// const Order = props => {\r\n\r\n//   return <div>\r\n//     sss\r\n//   </div>\r\n// }\r\nexport default Order\r\n","import React from 'react'\r\nconst EditMenu = props => {\r\n  return <div>\r\n    <p>Under construction..</p>\r\n    \r\n    </div>\r\n}\r\nexport default EditMenu\r\n","import {\r\n    createStore,\r\n    applyMiddleware,\r\n    compose\r\n} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {\r\n    getMenu,\r\n    getSize,\r\n    getCrust,\r\n    getTopping\r\n} from './../assets/api'\r\n// import cookie from 'react-cookies'\r\nlet menu, crust, size\r\n\r\nconst init = {\r\n    ordering: [],\r\n    isInit: false\r\n}\r\n\r\n\r\nconst reducers = (state = init, {\r\n    type,\r\n    payload\r\n}) => {\r\n    // console.log(payload)\r\n    switch (type) {\r\n        case 'Ordering':\r\n            // console.log('2')\r\n            return {\r\n                ...state,\r\n                ordering: payload.list\r\n            }\r\n\r\n            case 'MENU_INIT':\r\n                // console.log(payload)\r\n                return {\r\n                    ...state,\r\n                    isInit: payload.isInit,\r\n                        pizza: payload.pizza,\r\n                        crust: payload.crust,\r\n                        size: payload.size,\r\n                        topping: payload.topping\r\n                }\r\n                default:\r\n                    return state\r\n    }\r\n}\r\n// export const menuInit = () => {\r\n//     console.log('nj')\r\n// }\r\nexport const menuInit = () => async dispatch => {\r\n    try {\r\n\r\n        let pizza = await getMenu()\r\n        let crust = await getCrust()\r\n        let size = await getSize()\r\n        let topping = await getTopping()\r\n        // console.log(topping)\r\n        dispatch({\r\n            type: 'MENU_INIT',\r\n            payload: {\r\n                pizza: pizza.data.data,\r\n                crust: crust.data.data,\r\n                size: size.data.data,\r\n                topping: topping.data.data,\r\n                isInit: true\r\n            }\r\n\r\n        });\r\n    } catch (e) {\r\n\r\n    }\r\n\r\n}\r\n//store\r\nconst store = createStore(reducers, compose(\r\n    applyMiddleware(thunkMiddleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n))\r\nexport default store","import React, { useCallback, useEffect, useState } from 'react'\r\nimport Menu from './page/Menu/Menu.jsx'\r\nimport Order from './page/Order/Order.jsx'\r\nimport EditMenu from './page/EditMenu/EditMenu.jsx'\r\nimport { getMenu } from './assets/api'\r\nimport { connect } from 'react-redux'\r\nimport './App.css'\r\nimport { HashRouter, Route, NavLink, Switch,Link } from 'react-router-dom'\r\nimport { menuInit } from './store/index'\r\nclass App extends React.Component {\r\n  constructor(prpos) {\r\n    super()\r\n  }\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <nav>\r\n          <NavLink exact to={'/menu'}>\r\n            Menu\r\n          </NavLink>\r\n          <NavLink exact to={'/order'}>\r\n            Order\r\n          </NavLink>\r\n          <NavLink exact to={'/editMenu'}>\r\n            Edit\r\n          </NavLink>\r\n          \r\n        </nav>\r\n        <main>\r\n          <Switch>\r\n            <Route path=\"/menu\" component={Menu} />\r\n            <Route path=\"/order/\" component={Order} />\r\n            <Route path=\"/editMenu/\" component={EditMenu} />\r\n\r\n          </Switch>\r\n        </main>\r\n      </HashRouter>\r\n    )\r\n  }\r\n  componentDidMount() {\r\n    // console.log(this.props.menuInit)\r\n    this.props.menuInit()\r\n    // const getInit = () => dispatch => {\r\n    // console.log('kkk')\r\n    // getMenu().then(res => {\r\n    //   this.props.menu({\r\n    //     // type: 'menu',\r\n    //     // payload: {\r\n    //     menu: res.data.data\r\n    //     // }\r\n    //   })\r\n    // })\r\n    // dispatch({ type: 'loginStart' })\r\n    // request.post('/api/login', { data: userName }, () => {\r\n    //   dispatch({ type: 'loginSuccess', payload: userName })\r\n    // })\r\n    // }\r\n    // store.dispatch(getInit())\r\n    // getMenu().then(res => {\r\n    //   console.log(res.data.data)\r\n    //   this.props.menu(res.data.data)\r\n    //   // init.menu = res.data.data\r\n    //   // let data = [\r\n    //   //   { id: 1, flavour: 'meat love', price: '10.9' },\r\n    //   //   { id: 2, flavour: 'hawaii', price: '9.9' }\r\n    //   // ]\r\n    //   // for (let i = 0; i < res.data.data.length; i++) {\r\n    //   //     console.log(data.length)\r\n    //   //     let cell = < MenuCell addItem = {\r\n    //   //         this.addItem.bind(this)\r\n    //   //     }\r\n    //   //     data = {\r\n    //   //         res.data.data[i]\r\n    //   //     }\r\n    //   //     key = {\r\n    //   //         i\r\n    //   //     }\r\n    //   //     index = {\r\n    //   //         i\r\n    //   //     }\r\n    //   //     />\r\n    //   //     content.push(cell)\r\n    //   //     console.log(content)\r\n    //   // }\r\n    //   // this.setState({ content: content, menuData: res.data.data })\r\n    // })\r\n  }\r\n}\r\n// const App = props => {\r\n//   console.log(props)\r\n//   getMenu().then(res => {\r\n//     console.log(res.data.data)\r\n//     // props.menu(res.data.data)\r\n//     // init.menu = res.data.data\r\n//     // let data = [\r\n//     //   { id: 1, flavour: 'meat love', price: '10.9' },\r\n//     //   { id: 2, flavour: 'hawaii', price: '9.9' }\r\n//     // ]\r\n//     // for (let i = 0; i < res.data.data.length; i++) {\r\n//     //     console.log(data.length)\r\n//     //     let cell = < MenuCell addItem = {\r\n//     //         this.addItem.bind(this)\r\n//     //     }\r\n//     //     data = {\r\n//     //         res.data.data[i]\r\n//     //     }\r\n//     //     key = {\r\n//     //         i\r\n//     //     }\r\n//     //     index = {\r\n//     //         i\r\n//     //     }\r\n//     //     />\r\n//     //     content.push(cell)\r\n//     //     console.log(content)\r\n//     // }\r\n//     // this.setState({ content: content, menuData: res.data.data })\r\n//   })\r\n//   // const [message, setMessage] = useState(null)\r\n//   // const [isFetching, setIsFetching] = useState(false)\r\n//   // const [url, setUrl] = useState('/getMenu')\r\n//   // // const fetchData = useCallback(() => {\r\n//   //   fetch(url)\r\n//   //     .then(response => {\r\n//   //       if (!response.ok) {\r\n//   //         throw new Error(`status ${response.status}`)\r\n//   //       }\r\n//   //       return response.json()\r\n//   //     })\r\n//   //     .then(json => {\r\n//   //       setMessage(json.data[0])\r\n//   //       setIsFetching(false)\r\n//   //     })\r\n//   //     .catch(e => {\r\n//   //       setMessage(`API call failed: ${e}`)\r\n//   //       setIsFetching(false)\r\n//   //     })\r\n//   // }, [url])\r\n//   // useEffect(() => {\r\n//   //   setIsFetching(true)\r\n//   //   fetchData()\r\n//   // }, [fetchData])\r\n//   // console.log(message)\r\n//   return (\r\n//     <HashRouter>\r\n//       <nav>\r\n//         <NavLink exact to={'/'}>\r\n//           search\r\n//         </NavLink>\r\n//         <NavLink exact to={'/order'}>\r\n//           oder\r\n//         </NavLink>\r\n//         <NavLink exact to={'/editMenu'}>\r\n//           edit\r\n//         </NavLink>\r\n//       </nav>\r\n//       <main>\r\n//         <Switch>\r\n//           <Route path=\"/\" component={Menu} />\r\n//           <Route path=\"/order\" component={Order} />\r\n//           <Route path=\"/editMenu\" component={EditMenu} />\r\n//         </Switch>\r\n//       </main>\r\n//     </HashRouter>\r\n//   )\r\n// }\r\n\r\n\r\nconst mapStateToProps = ({ ordering, menu }) => {\r\n  return {\r\n    ordering: ordering,\r\n    menu\r\n  }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  // console.log(dispatch)\r\n  return {\r\n    // menu: menu => {\r\n    //   console.log('jj')\r\n    //   return dispatch({\r\n    //     type: 'menu',\r\n    //     payload: {\r\n    //       menu\r\n    //     }\r\n    //   })\r\n    // },\r\n    menuInit: menuInit\r\n  }\r\n}\r\nexport default connect(mapStateToProps, (mapDispatchToProps, { menuInit }))(App)\r\n// export default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'react-app-polyfill/ie11'\r\nimport 'react-app-polyfill/stable'\r\nimport './index.css';\r\nimport App from './App.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {\r\n    Provider\r\n} from 'react-redux'\r\nimport store from './store/index';\r\n\r\n\r\nReactDOM.render( < Provider store = {\r\n            store\r\n        } >\r\n        <\r\n        App / >\r\n        <\r\n        /Provider>, document.getElementById('root'))\r\n\r\n\r\n        // If you want your app to work offline and load faster, you can change\r\n        // unregister() to register() below. Note this comes with some pitfalls.\r\n        // Learn more about service workers: https://bit.ly/CRA-PWA\r\n        serviceWorker.unregister();"],"sourceRoot":""}